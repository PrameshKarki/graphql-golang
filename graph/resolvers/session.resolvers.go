package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"

	"github.com/PrameshKarki/event-management-golang/graph/model"
)

// CreateSession is the resolver for the createSession field.
func (r *mutationResolver) CreateSession(ctx context.Context, input *model.SessionInput) (*model.Response, error) {
	panic(fmt.Errorf("not implemented: CreateSession - createSession"))
}

// UpdateSession is the resolver for the updateSession field.
func (r *mutationResolver) UpdateSession(ctx context.Context, id string, input *model.SessionInput) (*model.Response, error) {
	panic(fmt.Errorf("not implemented: UpdateSession - updateSession"))
}

// DeleteSession is the resolver for the deleteSession field.
func (r *mutationResolver) DeleteSession(ctx context.Context, id string) (*model.Response, error) {
	panic(fmt.Errorf("not implemented: DeleteSession - deleteSession"))
}

// GetEventSessions is the resolver for the getEventSessions field.
func (r *queryResolver) GetEventSessions(ctx context.Context, id string) ([]*model.Session, error) {
	panic(fmt.Errorf("not implemented: GetEventSessions - getEventSessions"))
}
