type Expense{
    id: ID!
    itemName: String!
    cost: Float!
    description: String
    category: String!
}

type ExpenseWithEvent{
    id: ID!
    itemName: String!
    cost: Float!
    description: String
    category: String!
    event: Event!
}

type ExpensesByCategory{
    category: String!
    total: Float!
}

input ExpenseInput{
    itemName: String!
    cost: Float!
    description: String
    category: String!
}

extend type Query {
  getExpensesOfEvent(eventId: ID!): [Expense!]! @private
  getExpense(id: ID!): ExpenseWithEvent! @private
  getExpensesByCategory(eventId: ID!): [ExpensesByCategory!]! @private
}
extend type Mutation {
  addExpense(eventId: ID!,data: ExpenseInput!): Response! @private
  deleteExpense(id: ID!): Response! @private
  updateExpense(id: ID!,data: ExpenseInput!): Response! @private
}